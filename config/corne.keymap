/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        layout_swap {
            bindings = <&tog 1>;
            key-positions = <37 40>;
            layers = <0 1 2>;
        };

        number_layer {
            bindings = <&mo 5>;
            key-positions = <15 16>;
            layers = <0 1 2>;
        };

        function_layer {
            bindings = <&mo 6>;
            key-positions = <4 5>;
            layers = <0 1 2>;
        };

        period {
            bindings = <&kp PERIOD>;
            key-positions = <21 22>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <20 21>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <19 21 22>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <19 20 21>;
        };

        apostrophe {
            bindings = <&kp APOSTROPHE>;
            key-positions = <8 21>;
        };

        quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <7 21>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <30 31>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <18 19>;
        };

        equals {
            bindings = <&kp EQUAL>;
            key-positions = <6 7>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <18 19 20>;
        };

        forward_slash {
            bindings = <&kp SLASH>;
            key-positions = <31 20 9>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <7 20 33>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <19 8 21>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <19 10>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <6 19>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <7 33>;
        };

        exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <7 8 21>;
        };

        question {
            bindings = <&kp QUESTION>;
            key-positions = <19 20 9>;
        };

        dollar_sign {
            bindings = <&kp DOLLAR>;
            key-positions = <31 32 9>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <7 20 21>;
        };

        asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <30 31 32>;
        };

        ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <19 21>;
        };

        hashtag {
            bindings = <&kp POUND>;
            key-positions = <6 7 8>;
        };

        mac_layer {
            bindings = <&to 2>;
            key-positions = <13 27 31>;
            layers = <0 1>;
        };

        win_layer {
            bindings = <&to 0>;
            key-positions = <2 8 30>;
            layers = <1 2>;
        };

        left_reset {
            bindings = <&none>;
            key-positions = <1 14 27 16 5>;
        };

        right_reset {
            bindings = <&none>;
            key-positions = <6 19 32 21 10>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <26 25>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <29 28>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <27 26>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <27 28>;
        };
    };

    macros {
        mouthface: mouthface {
            compatible = "zmk,behavior-macro";
            label = "MOUTHFACE";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp E &kp Y &kp E &kp COLON &kp COLON &kp L &kp I &kp P &kp S &kp COLON &kp COLON &kp E &kp Y &kp E &kp COLON>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        windows {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y    &kp U  &kp I          &kp O     &kp P      &kp BSPC
&kp LSHIFT        &kp A  &kp S  &kp D         &kp F  &kp G        &kp H    &kp J  &kp K          &kp UP    &kp L      &mouthface
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N    &kp M  &kp LEFT       &kp DOWN  &kp RIGHT  &none
                                &kp LEFT_ALT  &mo 3  &kp SPACE    &kp RET  &mo 4  &kp RIGHT_GUI
            >;
        };

        colemack_dh {
            bindings = <
&trans  &kp Q  &kp W  &kp F   &kp P   &kp B     &kp J   &kp L   &kp U           &kp Y     &none   &trans
&trans  &kp A  &kp R  &kp S   &kp T   &kp G     &kp M   &kp N   &kp E           &kp I     &kp O   &trans
&trans  &kp Z  &kp X  &kp C   &kp D   &kp V     &kp K   &kp H   &kp LEFT_ARROW  &kp DOWN  &kp UP  &kp RIGHT
                      &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        mac {
            bindings = <
&trans            &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans             &trans  &trans  &trans
&trans            &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans             &trans  &trans  &trans
&kp LEFT_COMMAND  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans             &trans  &trans  &trans
                                  &trans  &trans  &trans    &trans  &trans  &kp RIGHT_CONTROL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp NUMBER_1      &kp N2            &kp NUMBER_3      &kp N4            &kp NUMBER_5        &trans  &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans
&trans      &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &kp LC(NUMBER_4)  &kp LC(NUMBER_5)    &trans  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans
&trans      &trans            &trans            &trans            &trans            &trans              &trans  &trans        &trans        &trans        &trans  &trans
                                                &trans            &trans            &trans              &trans  &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans         &trans            &kp DELETE
&trans  &trans  &trans  &trans  &trans  &trans    &kp GRAVE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LESS_THAN  &kp GREATER_THAN  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PIPE   &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans         &trans            &trans
                        &trans  &trans  &trans    &trans     &trans                &trans
            >;
        };

        number_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans  &trans
                        &trans  &trans  &trans    &trans  &kp NUMBER_0  &trans
            >;
        };

        function_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
